(window.webpackJsonp=window.webpackJsonp||[]).push([[67],{349:function(e,l,t){"use strict";t.r(l);var s=t(14),a=Object(s.a)({},(function(){var e=this,l=e._self._c;return l("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[l("h1",{attrs:{id:"css相关"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#css相关"}},[e._v("#")]),e._v(" CSS相关")]),e._v(" "),l("h2",{attrs:{id:"flex总结"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#flex总结"}},[e._v("#")]),e._v(" flex总结")]),e._v(" "),l("p",[l("a",{attrs:{href:"https://www.zhangxinxu.com/wordpress/2018/10/display-flex-css3-css/",target:"_blank",rel:"noopener noreferrer"}},[e._v("参考链接张鑫旭"),l("OutboundLink")],1)]),e._v(" "),l("blockquote",[l("p",[l("code",[e._v("默认是水平轴")])])]),e._v(" "),l("h3",{attrs:{id:"作用在flex容器上的css属性"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#作用在flex容器上的css属性"}},[e._v("#")]),e._v(" 作用在flex容器上的CSS属性")]),e._v(" "),l("ul",[l("li",[l("p",[e._v("flex-direction")]),e._v(" "),l("ul",[l("li",[e._v("row 水平 从左往右")]),e._v(" "),l("li",[e._v("row-reverse 反向水平")]),e._v(" "),l("li",[e._v("column  竖")]),e._v(" "),l("li",[e._v("column-reverse 反向竖")])])]),e._v(" "),l("li",[l("p",[e._v("flex-wrap")]),e._v(" "),l("ul",[l("li",[e._v("nowrap 默认值，单行显示")]),e._v(" "),l("li",[e._v("wrap 宽度不足换行")]),e._v(" "),l("li",[e._v("wrap-reverse 宽度不足换行但是从下往上")])])]),e._v(" "),l("li",[l("p",[e._v("flex-flow\nflex-flow: flex-direction | flex-wrap")])]),e._v(" "),l("li",[l("p",[e._v("justify-content")])])]),e._v(" "),l("blockquote",[l("p",[l("code",[e._v("决定水平方向子项的对齐和分布")])])]),e._v(" "),l("ul",[l("li",[l("p",[e._v("flex-start 向左对齐")])]),e._v(" "),l("li",[l("p",[e._v("flex-end 向右对齐")])]),e._v(" "),l("li",[l("p",[e._v("center 居中对齐")])]),e._v(" "),l("li",[l("p",[e._v("space-between 两端对齐 两边的靠右无间距 中间等分")])]),e._v(" "),l("li",[l("p",[e._v("space-around 两端对齐 两边靠右有间距 两边是中间的二分之一")])]),e._v(" "),l("li",[l("p",[e._v("space-evenly 每个间距都均匀分布")])]),e._v(" "),l("li",[l("p",[e._v("align-item")])])]),e._v(" "),l("blockquote",[l("p",[l("code",[e._v("决定flex子项们相对于flex容器在垂直方向上的对齐方式")])])]),e._v(" "),l("ul",[l("li",[l("p",[e._v("stretch 默认值 子项拉伸")])]),e._v(" "),l("li",[l("p",[e._v("flex-start 容器顶部对齐")])]),e._v(" "),l("li",[l("p",[e._v("flex-end 容器底部对齐")])]),e._v(" "),l("li",[l("p",[e._v("center 垂直居中")])]),e._v(" "),l("li",[l("p",[e._v("baseline  所有flex子选项相对于flex容器基线对齐")])]),e._v(" "),l("li",[l("p",[e._v("align-content")])])]),e._v(" "),l("blockquote",[l("p",[l("code",[e._v("指明垂直方向每一行flex元素的对齐和分布方式,如果所有flex子项只有一行，align-content是没有任何效果的")]),e._v("\nstretch 默认值，每一行flex子元素都等比例拉伸\nflex-start 逻辑css属性值，从顶部堆砌\nflex-end 底部堆放\ncenter 整体垂直居中\nspace-around 每一行都上下享有独立不重叠空间\nspace-evenly 每一行元素等分")])]),e._v(" "),l("h3",{attrs:{id:"作用在flex子项上的css属性"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#作用在flex子项上的css属性"}},[e._v("#")]),e._v(" 作用在flex子项上的CSS属性")]),e._v(" "),l("ul",[l("li",[e._v("order 可通过设置order改变某一个flex子项的排序位置 默认是0，如果想要某一个flex子项排在前面，可设置比0小的整数就可以了，比如-1")]),e._v(" "),l("li",[e._v("flex-grow\n"),l("ul",[l("li",[e._v("不支持负值，默认是0，表示不占用剩余空间扩展增加的宽度")]),e._v(" "),l("li",[e._v("只有一个flex子项设置了flex-grow属性值\n"),l("ul",[l("li",[e._v("flex-grow大于1， 扩展空间就总剩余空间和这个比例的计算值")]),e._v(" "),l("li",[e._v("flow-grow小于1，则独享所有剩余空间")])])]),e._v(" "),l("li",[e._v("多个flex设置\n"),l("ul",[l("li",[e._v("总和小于1，则每个子项扩展的空间就总剩余空间和当前元素设置的flow-grow比例的计算值")]),e._v(" "),l("li",[e._v("总和大于1，则表示剩余空白间隙大家等分，如果设置flex-grow比例： 1:2:1，则中间flex子项占据一半项目的空白间隙，剩下前后两个元素等分")])])])])]),e._v(" "),l("li",[e._v("flex-shrink (收缩)")])]),e._v(" "),l("blockquote",[l("p",[l("code",[e._v("不支持负值，默认值是1，也就是默认所有flex子项都会收缩，如果设置为0，就是不收缩;已知flex子项不换行，且容器空间不足，不足的空间就是“完全收缩的尺寸”：")])])]),e._v(" "),l("ul",[l("li",[e._v("如果只有一个flex子项设置了flex-shrink\nflex-shrink值小于1，则收缩的尺寸不完全，会有一部分内容溢出flex容器\nflex-shrink值大于等于1，则收缩完全，正好填满flex容器")]),e._v(" "),l("li",[e._v("多个flex子项设置了flex-shrink\n"),l("ul",[l("li",[e._v("flex-shrink值的总和小于1，则收缩的尺寸不完全，每个元素收缩尺寸占“完全收缩的尺寸”的比例就是设置的flex-shrink的值。")]),e._v(" "),l("li",[e._v("flex-shrink值的总和大于1，则收缩完全，每个元素收缩尺寸的比例和flex-shrink值的比例一样")])])]),e._v(" "),l("li",[e._v("flex-basis")])]),e._v(" "),l("blockquote",[l("p",[l("code",[e._v("定义了在分配剩余空间之前元素的默认大小 flex-basis: <length> | auto;/* 默认值是 auto */")])])]),e._v(" "),l("ul",[l("li",[l("p",[e._v("默认值是auto，就是自动。有设置width则占据空间就是width，没有设置就按内容宽度来")])]),e._v(" "),l("li",[l("p",[e._v("如果同时设置width和flex-basis，就渲染表现来看，会忽略width")])]),e._v(" "),l("li",[l("p",[e._v("当剩余空间不足的时候，flex子项的实际宽度并通常不是设置的flex-basis尺寸，因为flex布局剩余空间不足的时候默认会收缩")])]),e._v(" "),l("li",[l("p",[e._v("flex\nflex属性是flex-grow，flex-shrink和flex-basis的缩写")])])]),e._v(" "),l("blockquote",[l("p",[l("code",[e._v("语法： flex： none | auto | [<'flex-grow'><'flex-shrink'>? || <'flex-basis'>]")])])]),e._v(" "),l("ul",[l("li",[l("p",[e._v("其中第2和第3个参数（flex-shrink和flex-basis）是可选的。"),l("code",[e._v("默认值: 0 1 auto")])])]),e._v(" "),l("li",[l("p",[e._v("flex默认值等同于 flex： 0 1 auto")])]),e._v(" "),l("li",[l("p",[e._v("flex：none等同于 0 0 auto")])]),e._v(" "),l("li",[l("p",[e._v("flex:auto等同于flex:1 1 auto；")])]),e._v(" "),l("li",[l("p",[e._v("align-self")]),e._v(" "),l("ul",[l("li",[e._v("指控制单独某一个flex子项的垂直对齐方式， 写在flex容器上的这个align-items属性，后面是items，有个s，表示子项们，是全体；这里是self，单独一个个体")]),e._v(" "),l("li",[e._v("唯一区别就是align-self多了个auto（默认值），表示继承自flex容器的align-items属性值")])])])]),e._v(" "),l("h3",{attrs:{id:"常见flex语法"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#常见flex语法"}},[e._v("#")]),e._v(" 常见flex语法")]),e._v(" "),l("ul",[l("li",[e._v("单值语法\n"),l("ul",[l("li",[e._v("一个无单位数"),l("number",[e._v("：会被当做flex: "),l("number",[e._v(" 1 0; flex-shrink值假定为1，然后flex-basis值假定为0")])],1)],1),e._v(" "),l("li",[e._v("一个有效的宽度width值，它会被当多flex-basis的值")]),e._v(" "),l("li",[e._v("关键字\n"),l("ul",[l("li",[e._v("none 元素会根据自身宽高来设置尺寸。它是完全非弹性的：既不会缩短，也不会伸长来适应 flex 容器，相当于设置了"),l("code",[e._v("flex; 0 0 auto")])]),e._v(" "),l("li",[e._v("auto 元素会根据自身的宽高来确定尺寸，但是会伸长并吸收容器中额外的自由空间，也会缩短自身来适应flex容器，这相当于将属性设置为"),l("code",[e._v("flex：1 1 auto")])]),e._v(" "),l("li",[e._v("initial 元素会根据自身的宽高来确定自身尺寸，但是会收缩自身已适应flex容器，但并不会伸长并吸收flex容器额外的空间，相当于设置了"),l("code",[e._v("flex： 0 1 auto")])])])])])]),e._v(" "),l("li",[l("code",[e._v("flex: 1")]),e._v(" 就相当于设置了"),l("code",[e._v("flex: 1 1 auto")]),e._v(", 由于flex-shrink是1，默认不收缩， auto是按照内容宽度， flex-grow默认为0,不伸长，但是设置1就会根据剩余的对比，进行等比放大。")])]),e._v(" "),l("h3",{attrs:{id:"css选择器优先级"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#css选择器优先级"}},[e._v("#")]),e._v(" css选择器优先级")]),e._v(" "),l("p",[e._v("内联 > id > 类、属性、伪类 > 标签元素、伪元素\n伪类： ：hover\n伪元素： ：after、：before")]),e._v(" "),l("h3",{attrs:{id:"bfc"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#bfc"}},[e._v("#")]),e._v(" BFC")]),e._v(" "),l("p",[e._v("可以理解为一个独立的容器，不会受外面的影响，常用来清除浮动，阻止margin重叠，防止元素被浮动元素覆盖\n常见形成BFC的方式有个\nfloat不为none\noverflow不会visible\ndisplay为inline-block、table-cell、flex、\nposition不为static或relative")]),e._v(" "),l("h3",{attrs:{id:"清除浮动的方法"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#清除浮动的方法"}},[e._v("#")]),e._v(" 清除浮动的方法")]),e._v(" "),l("p",[e._v("清除浮动可以理解为清除浮动产生的影响，当元素产生浮动时也是为当前元素创建的块格式化上下文，会对周围的元素或父元素产生影响，父元素无法自动计算高度而造成坍塌，和兄弟元素错位。")]),e._v(" "),l("ol",[l("li",[e._v("在父元素上添加一个伪元素")])]),e._v(" "),l("div",{staticClass:"language-js line-numbers-mode"},[l("pre",{pre:!0,attrs:{class:"language-js"}},[l("code",[l("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("clearfix"),l("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),l("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v("after "),l("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),l("span",{pre:!0,attrs:{class:"token literal-property property"}},[e._v("content")]),l("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),l("span",{pre:!0,attrs:{class:"token string"}},[e._v("'\\20'")]),l("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n  "),l("span",{pre:!0,attrs:{class:"token literal-property property"}},[e._v("clear")]),l("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" both"),l("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n  "),l("span",{pre:!0,attrs:{class:"token literal-property property"}},[e._v("display")]),l("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" block"),l("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n  "),l("span",{pre:!0,attrs:{class:"token literal-property property"}},[e._v("height")]),l("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),l("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),l("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n  "),l("span",{pre:!0,attrs:{class:"token literal-property property"}},[e._v("visibility")]),l("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" hidden"),l("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),l("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])]),e._v(" "),l("div",{staticClass:"line-numbers-wrapper"},[l("span",{staticClass:"line-number"},[e._v("1")]),l("br"),l("span",{staticClass:"line-number"},[e._v("2")]),l("br"),l("span",{staticClass:"line-number"},[e._v("3")]),l("br"),l("span",{staticClass:"line-number"},[e._v("4")]),l("br"),l("span",{staticClass:"line-number"},[e._v("5")]),l("br"),l("span",{staticClass:"line-number"},[e._v("6")]),l("br"),l("span",{staticClass:"line-number"},[e._v("7")]),l("br")])]),l("ol",{attrs:{start:"2"}},[l("li",[e._v("使用bfc清除浮动\n子元素产生浮动，给父元素添加bfc，"),l("code",[e._v("overflow：hidden;")]),e._v("\n是因为根据bfc的规则，计算bfc的高度时，浮动元素也参与计算，因此清除浮动只需触发一个bfc就好。")]),e._v(" "),l("li",[e._v("父元素的最后一个子元素增加一个元素，设置clear：both；")])]),e._v(" "),l("h2",{attrs:{id:"关于flexible"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#关于flexible"}},[e._v("#")]),e._v(" 关于flexible")]),e._v(" "),l("p",[l("a",{attrs:{href:"https://github.com/amfe/article/issues/17",target:"_blank",rel:"noopener noreferrer"}},[e._v("参考链接"),l("OutboundLink")],1)]),e._v(" "),l("ul",[l("li",[e._v("视觉稿是750px，分为100份，每一份单位是a，1a = 7.5px，1rem就等于10a，即1rem = 75px;")]),e._v(" "),l("li",[e._v("比如iphone6的宽度和高度时"),l("code",[e._v("375 X 667")]),e._v(" dpr是2 换算成物理像素 750 x 1334\ndrp = 设备物理像素 / 设备独立像素(就是手机宽度px)")])])])}),[],!1,null,null,null);l.default=a.exports}}]);