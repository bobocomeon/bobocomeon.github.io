(window.webpackJsonp=window.webpackJsonp||[]).push([[64],{345:function(v,_,t){"use strict";t.r(_);var a=t(14),r=Object(a.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h1",{attrs:{id:"前端性能优化"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#前端性能优化"}},[v._v("#")]),v._v(" 前端性能优化")]),v._v(" "),_("h2",{attrs:{id:"首屏时间"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#首屏时间"}},[v._v("#")]),v._v(" 首屏时间")]),v._v(" "),_("blockquote",[_("p",[v._v("白屏时间+渲染时间")])]),v._v(" "),_("ul",[_("li",[v._v("浏览器输入网址并回车后，到首屏内容渲染完毕的时间。")]),v._v(" "),_("li",[v._v("首屏时间可以拆分为"),_("code",[v._v("白屏时间")]),v._v("、"),_("code",[v._v("数据接口响应时间")]),v._v("、"),_("code",[v._v("图片加载资源等")])])]),v._v(" "),_("h3",{attrs:{id:"指标采集具体办法"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#指标采集具体办法"}},[v._v("#")]),v._v(" 指标采集具体办法")]),v._v(" "),_("h4",{attrs:{id:"手动采集"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#手动采集"}},[v._v("#")]),v._v(" 手动采集")]),v._v(" "),_("ul",[_("li",[v._v("通过埋点方式进行，在页面开始位置打上FMP.Start(),在首屏结束位置打上FMP.End(),利用两个相减得到首屏时间")]),v._v(" "),_("li",[v._v("优点是兼容性强")]),v._v(" "),_("li",[v._v("缺点是和业务代码严重耦合，如果首屏采集逻辑调整，业务代码也要修改，迭代麻烦")])]),v._v(" "),_("h4",{attrs:{id:"自动化采集"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#自动化采集"}},[v._v("#")]),v._v(" 自动化采集")]),v._v(" "),_("p",[v._v("采用"),_("code",[v._v("MutationObserver api")]),v._v("，来监视DOM树所做的变化")]),v._v(" "),_("h2",{attrs:{id:"白屏时间"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#白屏时间"}},[v._v("#")]),v._v(" 白屏时间")]),v._v(" "),_("ul",[_("li",[v._v("概念： 输入浏览器回车(包括刷新跳转)，到页面开始出现第一个字符的时间，这个过程包括dns查询，建立tcp链接，发送首个http请求，如果是https还要加上tls验证时间，返回html文档，返回html文档，head解析完毕。一版是300ms。")]),v._v(" "),_("li",[v._v("影响因素： dns查询时间长，tcp请求连接慢，服务器处理请求速度太慢，客户端下载、解析、渲染时间过长，没有这事"),_("code",[v._v("Content-Encoding: Gzip")]),v._v(",本地缓存处理等。")])]),v._v(" "),_("h2",{attrs:{id:"性能瓶颈点-从-url-输入到页面加载整过程分析"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#性能瓶颈点-从-url-输入到页面加载整过程分析"}},[v._v("#")]),v._v(" 性能瓶颈点：从 URL 输入到页面加载整过程分析")]),v._v(" "),_("ul",[_("li",[v._v("客户端发起请求阶段\n"),_("ul",[_("li",[v._v("本地缓存")]),v._v(" "),_("li",[v._v("DNS查询耗时时长\n"),_("ul",[_("li",[_("code",[v._v('<link rel="dns-prefetch" href="https://s.google.com">')]),v._v(" 在静态资源请求之前对域名进行解析，减少用户等待时间,"),_("code",[v._v("dns-prefetch")]),v._v(" 表示强制对 "),_("code",[v._v("s.google.com")]),v._v(" 的域名做预解析。这样在 "),_("code",[v._v("s.google.com")]),v._v(" 的资源请求开始前，DNS 解析完成，后续请求就不需要重复做解析了")]),v._v(" "),_("li",[_("code",[v._v('<meta http-equiv="x-dns-prefetch-control" content="on">')]),v._v("表示开启 DNS 预解析功能")])])]),v._v(" "),_("li",[v._v("HTTP请求阻塞")])])]),v._v(" "),_("li",[v._v("服务器数据处理请求阶段\n"),_("ul",[_("li",[v._v("是否做了数据缓存处理")]),v._v(" "),_("li",[v._v("是否做了GZIP压缩")]),v._v(" "),_("li",[v._v("是否有重定向")])])]),v._v(" "),_("li",[v._v("客户端页面渲染阶段\n"),_("ul",[_("li",[v._v("构建DOM树瓶颈点")]),v._v(" "),_("li",[v._v("布局中的瓶颈点")])])])]),v._v(" "),_("h2",{attrs:{id:"首屏秒开的-4-重保障"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#首屏秒开的-4-重保障"}},[v._v("#")]),v._v(" 首屏秒开的 4 重保障")]),v._v(" "),_("ul",[_("li",[v._v("懒加载")]),v._v(" "),_("li",[v._v("缓存")]),v._v(" "),_("li",[v._v("静态资源缓存")]),v._v(" "),_("li",[v._v("并行化\n"),_("ul",[_("li",[v._v("在请求通道上下功夫，解决请求阻塞问题，进而减少首屏时间，可借助http2.0来多路复用")])])]),v._v(" "),_("li",[v._v("骨架屏减少用户焦虑等待")])]),v._v(" "),_("h2",{attrs:{id:"css3-硬件加速简介"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#css3-硬件加速简介"}},[v._v("#")]),v._v(" CSS3 硬件加速简介")]),v._v(" "),_("p",[_("a",{attrs:{href:"https://www.zhangxinxu.com/wordpress/2015/11/css3-will-change-improve-paint/",target:"_blank",rel:"noopener noreferrer"}},[v._v("参考链接"),_("OutboundLink")],1)]),v._v(" "),_("blockquote",[_("p",[v._v("流程render tree -> 渲染元素 -> GPU渲染 -> 浏览器复合图层 -> 生成最终的屏幕画像\n每个图层会被加载到gpu中渲染，gpu渲染中不会触发重绘，这些transform的图层会有独立的合成器进行进行处理。")])]),v._v(" "),_("ul",[_("li",[v._v("哪些规则可以让浏览器主动创建图层呢")]),v._v(" "),_("li",[v._v("transform不为none")]),v._v(" "),_("li",[v._v("透明属性opacity不为1")]),v._v(" "),_("li",[v._v("position不为ralative，且有z-index")]),v._v(" "),_("li",[v._v("用于css过滤器元素filter")]),v._v(" "),_("li",[v._v("will-change: transform; // 创建新的渲染层，使用gpu加速渲染，可以使用元素的伪类hover，移入的时候触发，移除就remove")])]),v._v(" "),_("h2",{attrs:{id:"性能优化"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#性能优化"}},[v._v("#")]),v._v(" 性能优化")]),v._v(" "),_("h3",{attrs:{id:"页面是否能快速加载"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#页面是否能快速加载"}},[v._v("#")]),v._v(" 页面是否能快速加载")]),v._v(" "),_("ul",[_("li",[_("p",[v._v("网络优化")]),v._v(" "),_("ul",[_("li",[v._v("http2")]),v._v(" "),_("li",[v._v("cdn")])])]),v._v(" "),_("li",[_("p",[v._v("代码大小")]),v._v(" "),_("ul",[_("li",[v._v("代码分隔")]),v._v(" "),_("li",[v._v("代码压缩")]),v._v(" "),_("li",[v._v("tree-shaking")])])]),v._v(" "),_("li",[_("p",[v._v("首屏优化")])]),v._v(" "),_("li",[_("p",[v._v("缓存")]),v._v(" "),_("ul",[_("li",[v._v("善用http缓存比如静态资源增加缓存public max-age")])])])]),v._v(" "),_("h3",{attrs:{id:"图片优化"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#图片优化"}},[v._v("#")]),v._v(" 图片优化")]),v._v(" "),_("ul",[_("li",[v._v("图片压缩")]),v._v(" "),_("li",[v._v("图片懒加载")])]),v._v(" "),_("h3",{attrs:{id:"合理的交互loading"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#合理的交互loading"}},[v._v("#")]),v._v(" 合理的交互loading")])])}),[],!1,null,null,null);_.default=r.exports}}]);