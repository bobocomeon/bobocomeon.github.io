(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{306:function(t,a,s){"use strict";s.r(a);var e=s(14),n=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"vue原理常见问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue原理常见问题"}},[t._v("#")]),t._v(" vue原理常见问题")]),t._v(" "),a("h3",{attrs:{id:"响应式系统"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#响应式系统"}},[t._v("#")]),t._v(" 响应式系统")]),t._v(" "),a("p",[t._v("通过"),a("code",[t._v("Object.defineproperty")]),t._v("来实现对对象的「响应式」化，入参是一个 "),a("code",[t._v("obj")]),t._v("（需要绑定的对象）、"),a("code",[t._v("key")]),t._v("（"),a("code",[t._v("obj")]),t._v("的某一个属性），"),a("code",[t._v("val")]),t._v("（具体的值）。经过 "),a("code",[t._v("defineReactive")]),t._v(" 处理以后，我们的 "),a("code",[t._v("obj")]),t._v(" 的 "),a("code",[t._v("key")]),t._v(" 属性在「读」的时候会触发 "),a("code",[t._v("reactiveGetter")]),t._v(" 方法，而在该属性被「写」的时候则会触发 "),a("code",[t._v("reactiveSetter")]),t._v(" 方法。")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("defineReactive")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" val")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("defineProperty")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("enumerable")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("       "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 属性可枚举 */")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("configurable")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 属性可被修改或删除 */")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("reactiveGetter")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" val"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("         "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 实际上会依赖收集，下一小节会讲 */")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("reactiveSetter")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("newVal")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("newVal "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" val"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cb")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("newVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br")])]),a("h3",{attrs:{id:"初始化前-beforecreate做了写啥"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#初始化前-beforecreate做了写啥"}},[t._v("#")]),t._v(" 初始化前，beforeCreate做了写啥")]),t._v(" "),a("ul",[a("li",[t._v("合并options配置\n"),a("ul",[a("li",[t._v("初始化"),a("code",[t._v("new Vue")])]),t._v(" "),a("li",[t._v("子组件初始化，确认组件的父子关系和初始化某些实例属性")]),t._v(" "),a("li",[t._v("将父组件的自定义事件传递给子组件")]),t._v(" "),a("li",[t._v("提供将render函数转为vnode的方法")]),t._v(" "),a("li",[t._v("执行组件的beforeCreate钩子函数")]),t._v(" "),a("li",[t._v("并且在当前生命周期，是不能访问this中data定义的变量，这个时候data中的变量，还没挂载到this上")]),t._v(" "),a("li",[t._v("但是插件内部的install方法是通过Vue.use方法，一般选择在beforeCreate这个钩子内执行")])])])]),t._v(" "),a("h3",{attrs:{id:"为什么要依赖收集"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么要依赖收集"}},[t._v("#")]),t._v(" 为什么要依赖收集")]),t._v(" "),a("ol",[a("li",[t._v("首先在Observer的过程中会注册get方法，该方法是用来进行依赖收集，在它的闭包中有一个"),a("code",[t._v("Dep")]),t._v("对象，这个对象用来存放"),a("code",[t._v("Watcher")]),t._v("对象的实例，其实依赖收集就是把"),a("code",[t._v("Watcher")]),t._v(" 存放对应的"),a("code",[t._v("Dep")]),t._v("对象中去。")]),t._v(" "),a("li",[t._v("get方法可以让当前的"),a("code",[t._v("Watcher")]),t._v("对象（Dep.target）存放到它的"),a("code",[t._v("sub")]),t._v("中"),a("code",[t._v("addSub")]),t._v("方法，在数据变化时，"),a("code",[t._v("set")]),t._v("方法会调用"),a("code",[t._v("Dep")]),t._v("对象的"),a("code",[t._v("notify")]),t._v("方法通知它内部所有的"),a("code",[t._v("Watcher")]),t._v("对象进行视图更新。")])]),t._v(" "),a("p",[t._v("这是 Object.defineProperty 的 set/get 方法处理的事情，那么「依赖收集」的前提条件还有两个：")]),t._v(" "),a("ol",[a("li",[t._v("触发 get 方法；")]),t._v(" "),a("li",[t._v("新建一个 Watcher 对象。")])]),t._v(" "),a("p",[t._v("这个我们在 Vue 的构造类中处理，新建一个 Watcher 对象只需要 new 出来，这时候 Dep.target 已经指向了这个 new 出来的 Watcher 对象来")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Watcher")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 在new一个Watcher对象时将该对象赋值给Dep.target，在get中会用到 */")]),t._v("\n        Dep"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("target "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 更新视图的方法 */")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("update")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"视图更新啦～"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nDep"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("target "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br")])]),a("p",[t._v("而触发 get 方法也很简单，实际上只要把"),a("code",[t._v("render function")]),t._v("进行渲染，那么其中依赖的对象就会被读取，\n"),a("img",{attrs:{src:"/images/image.png",alt:"alt text"}})]),t._v(" "),a("h3",{attrs:{id:"什么是vnode"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是vnode"}},[t._v("#")]),t._v(" 什么是VNode")]),t._v(" "),a("p",[a("code",[t._v("render function")]),t._v(" 会被转化成 "),a("code",[t._v("VNode")]),t._v(" 节点，"),a("code",[t._v("Virtual DOM")]),t._v(" 其实就是一棵以 "),a("code",[t._v("JavaScript")]),t._v(" 对象（"),a("code",[t._v("VNode")]),t._v(" 节点）作为基础的树，用对象属性来描述节点，实际上它只是一层对真实 "),a("code",[t._v("DOM")]),t._v(" 的抽象。最终可以通过一系列操作使这棵树映射到真实环境上。")]),t._v(" "),a("h3",{attrs:{id:"编译compiler阶段做了些啥事"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#编译compiler阶段做了些啥事"}},[t._v("#")]),t._v(" 编译Compiler阶段做了些啥事")]),t._v(" "),a("p",[a("code",[t._v("compiler")]),t._v("阶段可以分为 "),a("code",[t._v("parse")]),t._v("、"),a("code",[t._v("optimize")]),t._v("、"),a("code",[t._v("generate")]),t._v("，最终需要得到 "),a("code",[t._v("render function")]),t._v("。")]),t._v(" "),a("p",[a("code",[t._v("parse")]),t._v("会通过正则等方式将"),a("code",[t._v("template")]),t._v("模版中进行字符串解析，得到指令、"),a("code",[t._v("class")]),t._v("、"),a("code",[t._v("style")]),t._v("，形成"),a("code",[t._v("AST")]),t._v("。")]),t._v(" "),a("h3",{attrs:{id:"数据更新视图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据更新视图"}},[t._v("#")]),t._v(" 数据更新视图")]),t._v(" "),a("blockquote",[a("p",[t._v("对"),a("code",[t._v("model")]),t._v("进行操作的时候，会触发对应"),a("code",[t._v("Dep")]),t._v("中的Watcher对象，"),a("code",[t._v("Watcher")]),t._v("对象会调用对应的"),a("code",[t._v("update")]),t._v("来修改视图，最终是将新产生的 "),a("code",[t._v("VNode")]),t._v(" 节点与老 "),a("code",[t._v("VNode")]),t._v(" 进行一个 "),a("code",[t._v("patch")]),t._v(" 的过程，比对得出「差异」，最终将这些「差异」更新到视图上。\n其中会进行dom 的diff操作，在patch的时候，主要是通过同层结点对比，而非对树进行逐层搜索遍历的方式，所以时间复杂度只有 O(n)，是一种相当高效的算法")])]),t._v(" "),a("p",[t._v("因为patch的主要功能是对比两个VNode结点，将差异更新到视图上，")]),t._v(" "),a("h3",{attrs:{id:"异步更新"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#异步更新"}},[t._v("#")]),t._v(" 异步更新")]),t._v(" "),a("h3",{attrs:{id:"computed被收集的过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#computed被收集的过程"}},[t._v("#")]),t._v(" computed被收集的过程")]),t._v(" "),a("ul",[a("li",[t._v("响应式数据被读取到了会触发getter，收集当前的watcher到依赖中，如果模板中用到了，就会读取渲染watcher，在计算属性里用到了就会读取渲染wathcer，只要值发生变化了就会通知计算属性重新计算并进行值返回，最后渲染。")]),t._v(" "),a("li",[t._v("computed 属性为什么能够在依赖改变的时候，自己发生变化？")])]),t._v(" "),a("p",[t._v("(我说 computed 和 watch 公用一个 Watcher 类，在 computed 的情况下有一个 dep 收集依赖，从而达到更新computed属性的效果，顺便跟他讲了computed Watcher如何跟渲染Watcher关联，以及 Vue 在二次收集依赖时用 cleanupDeps 卸载一些无用的 dep)")]),t._v(" "),a("h3",{attrs:{id:"为什么计算属性有缓存功能"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么计算属性有缓存功能"}},[t._v("#")]),t._v(" 为什么计算属性有缓存功能")]),t._v(" "),a("p",[t._v("在计算属性经过计算后，内部的标志位dirty已经表明计算过了，再次访问会直接访问读取的值，计算属性如果依赖了响应式属性，内部响应式会收集"),a("code",[t._v("computed-watcher")]),t._v("，当响应式值变化后会通知计算属性重新计算，也会通知页面重新渲染，渲染时会重新读取计算后的值。")]),t._v(" "),a("h3",{attrs:{id:"computed属性和watch属性分别什么场景使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#computed属性和watch属性分别什么场景使用"}},[t._v("#")]),t._v(" computed属性和watch属性分别什么场景使用")]),t._v(" "),a("p",[t._v("当模板中的某个值需要通过一个或多个数据计算得到时，或者对值进行大量处理，就使用计算属性，还有计算属性不接受参数必须要有值返回，当监听属性主要是监听某个值变化，对新值进行逻辑处理。")]),t._v(" "),a("h3",{attrs:{id:"自定义事件的机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自定义事件的机制"}},[t._v("#")]),t._v(" 自定义事件的机制")]),t._v(" "),a("p",[t._v("子组件使用this.$emit触发事件时，会在当前实例的事件中心去查找对应的事件，然后执行，不过这个事件是在父组件的作用域中定义。$emit的参数会传递给父组件的回调函数，完成组件通信。")]),t._v(" "),a("h3",{attrs:{id:"组件库中命令式弹窗组件的原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#组件库中命令式弹窗组件的原理"}},[t._v("#")]),t._v(" 组件库中命令式弹窗组件的原理")]),t._v(" "),a("p",[t._v("使用extend将组件转为构造函数，在实例化这个构造函数后，就会得到$el属性，也就是组件真实的dom，这个时候可以操作得到真实的dom去挂载，使用命令式也能调用")]),t._v(" "),a("h2",{attrs:{id:"vuex常见问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vuex常见问题"}},[t._v("#")]),t._v(" vuex常见问题")]),t._v(" "),a("h3",{attrs:{id:"vuex为什么把异步操作分装在action中"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vuex为什么把异步操作分装在action中"}},[t._v("#")]),t._v(" vuex为什么把异步操作分装在action中")]),t._v(" "),a("p",[t._v("其实是为了代码隔离，mutation同步是必须的，只做纯函数的变化，不受控的代码集中到action，异步竞态是用户自己的事，处理好了给mutation，去改变state的值。")]),t._v(" "),a("h3",{attrs:{id:"vuex直接修改state-与-用dispatch-commit来修改state的差异"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vuex直接修改state-与-用dispatch-commit来修改state的差异"}},[t._v("#")]),t._v(" vuex直接修改state 与 用dispatch／commit来修改state的差异")]),t._v(" "),a("p",[t._v("使用commit提交到mutation修改state的优点，记录每一次state变化的快照，保存状态快照，做到数据可溯源，单向操作，也便于调试，严格模式下，并且每次都要commit来修改state")]),t._v(" "),a("h3",{attrs:{id:"什么时候该用vuex"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么时候该用vuex"}},[t._v("#")]),t._v(" 什么时候该用vuex")]),t._v(" "),a("ol",[a("li",[t._v("无法很好进行数据管理的时候，当一个组件需要多次派发数据同步")]),t._v(" "),a("li",[t._v("跨组件共享数据，以及跨页面共享数据")])]),t._v(" "),a("h3",{attrs:{id:"vuex碰上v-model"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vuex碰上v-model"}},[t._v("#")]),t._v(" vuex碰上v-model")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 可以把v-model拆成")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("input "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("value"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"message"')]),t._v(" @input"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"updateMessage"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("computed")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mapState")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("message")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("state")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("message\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("methods")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("updateMessage")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("e")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$store"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("commit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'updateMessage'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br")])]),a("h3",{attrs:{id:"render-watcher、conputed-watcher、user-watcher区别和原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#render-watcher、conputed-watcher、user-watcher区别和原理"}},[t._v("#")]),t._v(" render-watcher、conputed-watcher、user-watcher区别和原理")]),t._v(" "),a("h4",{attrs:{id:"render-watcher"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#render-watcher"}},[t._v("#")]),t._v(" render-watcher")]),t._v(" "),a("ul",[a("li",[t._v("render-watcher是vue开发中最重要的实例了，data中属性的更新就会触发视图的更新，在初始化过程中，object.defineproperty会进行依赖收集,收集到的就是render-watcher，添加到这个属性的依赖列表（Dep）实例中。")]),t._v(" "),a("li",[t._v("Setter派发更新时，那就是执行render-watcher的回调，Dep实例就会就会通知，然后就会执行这个属性的Watcher实例上的update方法，这个run方法会重新生成执行render-function，如果patch diff更新视图。")])]),t._v(" "),a("h4",{attrs:{id:"user-watcher"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#user-watcher"}},[t._v("#")]),t._v(" user-watcher")]),t._v(" "),a("ul",[a("li",[t._v("是通过watch或者&watch显示创建的Watcher，这类watch允许开发者自定义响应式数据的变化，开发者可以指定某个响应式数据作为监听目标，并提供一个回调函数，当监听数据变化时，回调函数也会执行。")]),t._v(" "),a("li",[t._v("常用于通过监听数据变化执行异步操作，或者根据数据变化进行逻辑判断等任务")])]),t._v(" "),a("h4",{attrs:{id:"conputed-watcher"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#conputed-watcher"}},[t._v("#")]),t._v(" conputed-watcher")]),t._v(" "),a("ul",[a("li",[t._v("依赖追踪\n"),a("ul",[a("li",[t._v("当定义一个computed属性时，会创建一个Computed Watcher，这个Watcher会在初次访问计算属性时，执行其定义的函数，同时自动追踪函数中所依赖的所有响应式属性。")]),t._v(" "),a("li",[t._v("依赖收集： 在computed对象初始化期间，任何被访问的响应式数据都会将computed watcher收集他们各自的依赖列表（Dep实例），一旦依赖数据发生变更，Computed Watcher就会被通知;")])])]),t._v(" "),a("li",[t._v("缓存\n"),a("ul",[a("li",[t._v("computed具有缓存机制，当计算属性经过计算后，内部的标志位会表明已经计算过了，Computed-watcher会缓存计算结果，只有依赖的数据发生变化会重新计算，因为内部的响应式数据会收集computed-watcher，变更后通知计算属性基性计算，也会通知页面重新渲染，渲染时会重新读取重新计算后的值")])])])]),t._v(" "),a("h4",{attrs:{id:"举例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#举例"}},[t._v("#")]),t._v(" 举例")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("data")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("a")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("b")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("computed")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sum")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br")])]),a("ul",[a("li",[t._v("初始化: 当组件被创建时，vue在进行响应式收集的时候，会分别为a和b创建一个Dep实例，同时对于计算属性sum，vue会创建一个特殊的Watcvher（computed watcher）")]),t._v(" "),a("li",[t._v("依赖收集：\n"),a("ul",[a("li",[t._v("当 sum 第一次被访问时，它的 Computed Watcher 被激活。")]),t._v(" "),a("li",[t._v("Computed Watcher 开始执行 sum 的定义函数（return this.a + this.b;）。")]),t._v(" "),a("li",[t._v("当访问 a 和 b 时，它们各自的 getter 函数被调用。在 getter 中，Vue 检测到当前有一个活跃的 Watcher（sum 的 Computed Watcher）。")]),t._v(" "),a("li",[t._v("a 和 b 的 Dep 将这个 Watcher 添加到它们的依赖列表中。")]),t._v(" "),a("li",[t._v("同时，Watcher 记录它依赖于 a 和 b 的 Dep。（这个是避免重复收集，管理和优化依赖关系，当某个数据项不再使用，watcher可据此清除掉这个数据的依赖关系，减少不必要的计算和监听，精确的更新机制，只有真正依赖的这些数据的Watcher会被通知更新）")])])]),t._v(" "),a("li",[t._v("响应更新：\n"),a("ul",[a("li",[t._v("假设 a 的值从 1 变为 3。a 的 setter 被调用，它通知 a 的 Dep。")]),t._v(" "),a("li",[t._v("a 的 Dep 遍历它的依赖列表（包含 sum 的 Watcher），并通知这些 Watcher 数据已变化。")]),t._v(" "),a("li",[t._v('sum 的 Watcher 收到通知后，标记自己为 "dirty"，表示计算属性的结果可能已经变化，需要重新计算。')]),t._v(" "),a("li",[t._v("下次 sum 被访问时，它的 Watcher 会重新计算 sum 的值。")])])])])])}),[],!1,null,null,null);a.default=n.exports}}]);