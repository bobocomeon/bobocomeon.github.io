(window.webpackJsonp=window.webpackJsonp||[]).push([[60],{341:function(t,a,e){"use strict";e.r(a);var s=e(14),r=Object(s.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"原生小程序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#原生小程序"}},[t._v("#")]),t._v(" 原生小程序")]),t._v(" "),a("h2",{attrs:{id:"一次setdata做了哪些事"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一次setdata做了哪些事"}},[t._v("#")]),t._v(" 一次setData做了哪些事")]),t._v(" "),a("p",[t._v("首先在 Component 或者 Page 实例上合并 data；\n然后把第一个参数 callback 放到回调函数队列 queue；\n接下来发起数据通信，把数据通过桥的方式，由逻辑层 -> Native -> 渲染层，完成视图层更新；\n最后执行对应的 callback 函数，完成整个 setData 流程。")]),t._v(" "),a("h2",{attrs:{id:"何为跨端开发-主要应用场景是那些"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#何为跨端开发-主要应用场景是那些"}},[t._v("#")]),t._v(" 何为跨端开发？主要应用场景是那些？")]),t._v(" "),a("ol",[a("li",[t._v('跨端"是指能够在多种不同的平台（如iOS、Android、Web等）上运行的应用程序')]),t._v(" "),a("li",[t._v("H5:和传统的web应用没什么不同，都是打开URL地址，请求资源、加载数据、绘制页面")])]),t._v(" "),a("h2",{attrs:{id:"小程序基础库负责渲染、通信、底层基建等工作-包括怎么把代码渲染到页面上-怎么和逻辑层做通信。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小程序基础库负责渲染、通信、底层基建等工作-包括怎么把代码渲染到页面上-怎么和逻辑层做通信。"}},[t._v("#")]),t._v(" 小程序基础库负责渲染、通信、底层基建等工作，包括怎么把代码渲染到页面上，怎么和逻辑层做通信。")]),t._v(" "),a("ol",[a("li",[t._v("视图层的 JS 就很好理解了，可以理解成我们写的模版结构，比如微信的 WXML。在 WebView 环境下，只能识别 HTML、CSS 和 JS，不能够直接识别 WXML，需要先将 WXML 转成语法树结构，不过这些工作在小程序编译上传阶段就已经完成了。")])]),t._v(" "),a("h2",{attrs:{id:"setdate优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#setdate优化"}},[t._v("#")]),t._v(" setDate优化")]),t._v(" "),a("ul",[a("li",[t._v("控制 setData 的数据量\n"),a("ul",[a("li",[t._v("数据清理，不需要渲染的，放在this上，需要在渲染层用到，this.data")])])]),t._v(" "),a("li",[t._v("控制渲染优先级\n"),a("ul",[a("li",[t._v("当需要更新大量的元素时，给更新任务设置优先级，比如"),a("code",[t._v("删除列表，关闭弹窗要刷新列表,可以优先关闭弹窗再setData列表数据")])])])])])])}),[],!1,null,null,null);a.default=r.exports}}]);